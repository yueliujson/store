<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easy.dao.ProductKindDao">
    <insert id="save">
        insert into productkind(name, info, parent_id, createtime, creator, lastedittime)
        values (#{name}, #{info}, #{parent_id}, now(), #{creator}, now())
    </insert>

    <update id="edit">
        update productkind
        set name=#{name},
            info=#{info},
            parent_id=#{parent_id},
            lastEditTime=now()
        where id = #{id}
    </update>

    <update id="delete">
        update productkind
        set isdel=1,state=0
        where id = #{id}
    </update>

    <select id="get" resultMap="getChild">
        select id,
               name,
               info,
               parent_id,
               state,
               createtime,
               creator,
               lastedittime,
               isdel
        from productkind
        where id = #{id}
    </select>

    <resultMap id="getChild" type="com.easy.bean.ProductKind">
        <collection property="productKind" select="child" column="id"/>
    </resultMap>

    <select id="child" resultType="com.easy.bean.ProductKind">
        <bind name="likeName" value="'%'+name+'%'"/>
        select id,
        name,
        info,
        parent_id,
        state,
        createtime,
        creator,
        lastedittime,
        isdel
        from productkind
        where parent_id=#{id}
    </select>

    <select id="list" resultMap="getChild">
        <bind name="likeName" value="'%'+name+'%'"/>
        select id,
        name,
        info,
        parent_id,
        state,
        createtime,
        creator,
        lastedittime,
        isdel
        from productkind
        <where>
            <choose>
                <when test="id!=null">
                    id=#{id}
                </when>
                <otherwise>
                    <if test="name!=null">
                        name like #{likeName}
                    </if>
                    <trim prefix="and">
                        <if test="state!=null">
                            state=#{state}
                        </if>
                    </trim>
                    <trim prefix="and">
                        <if test="isdel!=null">
                            isdel=#{isDel}
                        </if>
                    </trim>
                </otherwise>
            </choose>
        </where>
    </select>
</mapper>